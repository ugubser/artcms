rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email in [
               {{ADMIN_EMAILS_ARRAY}}
             ];
    }
    
    // Helper function to check for valid image types
    function isValidImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Helper function to check file size (max 10MB)
    function isValidSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    // Portfolio images - public read, admin write with validation
    match /portfolio/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // Portfolio featured images - public read, admin write with validation
    match /portfolio/featured/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // Portfolio gallery images - public read, admin write with validation
    match /portfolio/gallery/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // About page images - public read, admin write with validation
    match /about/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // Branding assets (favicon, logos) - public read, admin write with validation
    match /branding/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // General uploads - admin only with validation
    match /uploads/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // Temporary uploads for CMS - admin only with validation
    match /temp/{allPaths=**} {
      allow read: if isAdmin();
      allow write: if isAdmin() && isValidImage() && isValidSize();
    }
    
    // Deny all other paths by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}